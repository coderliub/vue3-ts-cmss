{"version":3,"file":"js/528.907bc087.js","mappings":"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","sources":["webpack://vue3-ts-cmss/./src/components/page-search/index.ts","webpack://vue3-ts-cmss/./src/hooks/usePageSearch.ts","webpack://vue3-ts-cmss/./src/components/page-search/src/page-search.vue?6a2b","webpack://vue3-ts-cmss/./src/components/page-search/src/page-search.vue","webpack://vue3-ts-cmss/./src/components/page-search/src/page-search.vue?6157","webpack://vue3-ts-cmss/../../../packages/components/tree/src/model/util.ts","webpack://vue3-ts-cmss/../../../packages/components/tree/src/model/node.ts","webpack://vue3-ts-cmss/../../../packages/components/tree/src/model/tree-store.ts","webpack://vue3-ts-cmss/../../../packages/components/tree/src/tree-node-content.vue","webpack://vue3-ts-cmss/../../../packages/components/tree/src/model/useNodeExpandEventBroadcast.ts","webpack://vue3-ts-cmss/../../../packages/components/tree/src/model/useDragNode.ts","webpack://vue3-ts-cmss/../../../packages/components/tree/src/tree-node.vue","webpack://vue3-ts-cmss/../../../packages/components/tree/src/model/useKeydown.ts","webpack://vue3-ts-cmss/../../../packages/components/tree/src/tree.vue","webpack://vue3-ts-cmss/../../../packages/components/tree/index.ts","webpack://vue3-ts-cmss/./src/views/main/system/role/role.vue?ff06","webpack://vue3-ts-cmss/./src/views/main/system/role/config/search.config.ts","webpack://vue3-ts-cmss/./src/views/main/system/role/config/content.config.ts","webpack://vue3-ts-cmss/./src/views/main/system/role/config/modal.config.ts","webpack://vue3-ts-cmss/./src/views/main/system/role/role.vue","webpack://vue3-ts-cmss/./src/views/main/system/role/role.vue?3dad","webpack://vue3-ts-cmss/../../../packages/components/collapse-transition/src/collapse-transition.vue","webpack://vue3-ts-cmss/../../../packages/components/collapse-transition/index.ts"],"sourcesContent":["import PageSearch from './src/page-search.vue'\n\nexport default PageSearch\n","import { ref } from 'vue'\nimport PageContent from '@/components/page-content'\n\nexport function usePageSearch() {\n  const pageContentRef = ref<InstanceType<typeof PageContent>>()\n  const handleResetClick = () => {\n    pageContentRef.value?.getPageData()\n  }\n\n  const handleQueryClick = (queryInfo: any) => {\n    console.log(queryInfo)\n    pageContentRef.value?.getPageData(queryInfo)\n  }\n\n  return [pageContentRef, handleResetClick, handleQueryClick] as const\n}\n","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, mergeProps as _mergeProps, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6e4a9716\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"page-search\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"header\"\n}, \"高级检索\", -1));\n\nconst _hoisted_3 = {\n  class: \"handle-btns\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"重置\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"搜索\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Refresh = _resolveComponent(\"Refresh\");\n\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_Search = _resolveComponent(\"Search\");\n\n  const _component_lb_form = _resolveComponent(\"lb-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_lb_form, _mergeProps(_ctx.searchFormConfig, {\n    modelValue: _ctx.formData,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.updateFormData($event)),\n    ref: \"formRef\"\n  }), {\n    header: _withCtx(() => [_hoisted_2]),\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n      onClick: _ctx.handleResetClick\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Refresh)]),\n        _: 1\n      }), _hoisted_4]),\n      _: 1\n    }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.handleQueryClick\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Search)]),\n        _: 1\n      }), _hoisted_5]),\n      _: 1\n    }, 8, [\"onClick\"])])]),\n    _: 1\n  }, 16, [\"modelValue\"])]);\n}","import { defineComponent, ref } from 'vue';\nimport LbForm from '@/base-ui/form';\nexport default defineComponent({\n  props: {\n    searchFormConfig: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    LbForm\n  },\n  eimts: ['resetBtnClick', 'queryBtnClick'],\n\n  // 自定义指令\n  // directives: {\n  //   focus: {\n  //     // 可以传4个参数el, binding, vnode, oldVnode\n  //     mounted(el) {\n  //       el.focus()\n  //     }\n  //   }\n  // },\n  setup(props, {\n    emit\n  }) {\n    // 双向绑定的属性应该是由配置文件的field来决定的\n    // 1.优化一：formData中的属性应该动态来决定\n    const formItems = props.searchFormConfig?.formItems ?? [];\n    const formOriginData = {};\n\n    for (const item of formItems) {\n      formOriginData[item.field] = '';\n    }\n\n    const formData = ref({ ...formOriginData\n    }); // formData.value.name = '123'\n    // 2.优化二：当用户点击重置\n    // let currentInstance: any = null\n    // const { proxy }: any = getCurrentInstance()\n    // proxy.$refs.formRef.resetFormData()\n    // onMounted(() => {\n    // })\n\n    const formRef = ref();\n\n    const handleResetClick = () => {\n      for (const key in formOriginData) {\n        ;\n        formData.value[key] = formOriginData[key];\n      }\n\n      formRef.value?.resetFormData();\n      emit('resetBtnClick');\n    }; // 3.优化三：当用户点击搜索\n\n\n    const handleQueryClick = () => {\n      emit('queryBtnClick', formData.value);\n    }; // 快速判断formData和newValue是否相等\n    // 1.如果相等，直接return\n    // 2.如果不相等，遍历newValue，将不相等的属性赋值给formData\n\n\n    const updateFormData = newValue => {\n      // for (const key in newValue) {\n      //   if (formData.value[key] === newValue[key]) {\n      //     continue\n      //   }\n      //   ;(formData.value as any)[key] = newValue[key]\n      // }\n      // 防止formData和newValue是同一个对象，防止formData重复更新\n      if (JSON.stringify(formData.value) === JSON.stringify(newValue)) {\n        return;\n      }\n\n      for (const key in newValue) {\n        ;\n        formData.value[key] = newValue[key];\n      } // console.log('父组件formdata更新了')\n\n    };\n\n    return {\n      formData,\n      formRef,\n      handleResetClick,\n      updateFormData,\n      handleQueryClick\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import { render } from \"./page-search.vue?vue&type=template&id=6e4a9716&scoped=true&ts=true\"\nimport script from \"./page-search.vue?vue&type=script&lang=ts\"\nexport * from \"./page-search.vue?vue&type=script&lang=ts\"\n\nimport \"./page-search.vue?vue&type=style&index=0&id=6e4a9716&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\vue\\\\vue3why\\\\vue3-ts-cmss\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6e4a9716\"]])\n\nexport default __exports__","import type { SetupContext } from 'vue'\nimport type Node from './node'\nimport type { RootTreeType, TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n\nexport const handleCurrentChange = (\n  store: RootTreeType['store'],\n  emit: SetupContext['emit'],\n  setCurrent: () => void\n) => {\n  const preCurrentNode = store.value.currentNode\n  setCurrent()\n  const currentNode = store.value.currentNode\n  if (preCurrentNode === currentNode) return\n\n  emit('current-change', currentNode ? currentNode : null, currentNode)\n}\n","// @ts-nocheck\nimport { reactive } from 'vue'\nimport { hasOwn } from '@element-plus/utils'\nimport { NODE_KEY, markNodeData } from './util'\nimport type TreeStore from './tree-store'\n\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  FakeNode,\n  TreeKey,\n  TreeNodeChildState,\n  TreeNodeData,\n  TreeNodeLoadedDefaultProps,\n  TreeNodeOptions,\n} from '../tree.type'\n\nexport const getChildState = (node: Node[]): TreeNodeChildState => {\n  let all = true\n  let none = true\n  let allWithoutDisable = true\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i]\n    if (n.checked !== true || n.indeterminate) {\n      all = false\n      if (!n.disabled) {\n        allWithoutDisable = false\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false\n    }\n  }\n\n  return { all, none, allWithoutDisable, half: !all && !none }\n}\n\nconst reInitChecked = function (node: Node): void {\n  if (node.childNodes.length === 0 || node.loading) return\n\n  const { all, none, half } = getChildState(node.childNodes)\n  if (all) {\n    node.checked = true\n    node.indeterminate = false\n  } else if (half) {\n    node.checked = false\n    node.indeterminate = true\n  } else if (none) {\n    node.checked = false\n    node.indeterminate = false\n  }\n\n  const parent = node.parent\n  if (!parent || parent.level === 0) return\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent)\n  }\n}\n\nconst getPropertyFromData = function (node: Node, prop: string): any {\n  const props = node.store.props\n  const data = node.data || {}\n  const config = props[prop]\n\n  if (typeof config === 'function') {\n    return config(data, node)\n  } else if (typeof config === 'string') {\n    return data[config]\n  } else if (typeof config === 'undefined') {\n    const dataProp = data[prop]\n    return dataProp === undefined ? '' : dataProp\n  }\n}\n\nlet nodeIdSeed = 0\n\nclass Node {\n  id: number\n  text: string\n  checked: boolean\n  indeterminate: boolean\n  data: TreeNodeData\n  expanded: boolean\n  parent: Node\n  visible: boolean\n  isCurrent: boolean\n  store: TreeStore\n  isLeafByUser: boolean\n  isLeaf: boolean\n  canFocus: boolean\n\n  level: number\n  loaded: boolean\n  childNodes: Node[]\n  loading: boolean\n\n  constructor(options: TreeNodeOptions) {\n    this.id = nodeIdSeed++\n    this.text = null\n    this.checked = false\n    this.indeterminate = false\n    this.data = null\n    this.expanded = false\n    this.parent = null\n    this.visible = true\n    this.isCurrent = false\n    this.canFocus = false\n\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name]\n      }\n    }\n\n    // internal\n    this.level = 0\n    this.loaded = false\n    this.childNodes = []\n    this.loading = false\n\n    if (this.parent) {\n      this.level = this.parent.level + 1\n    }\n  }\n\n  initialize() {\n    const store = this.store\n    if (!store) {\n      throw new Error('[Node]store is required!')\n    }\n    store.registerNode(this)\n\n    const props = store.props\n    if (props && typeof props.isLeaf !== 'undefined') {\n      const isLeaf = getPropertyFromData(this, 'isLeaf')\n      if (typeof isLeaf === 'boolean') {\n        this.isLeafByUser = isLeaf\n      }\n    }\n\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data)\n\n      if (store.defaultExpandAll) {\n        this.expanded = true\n        this.canFocus = true\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand()\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data)\n    }\n    if (!this.data) return\n\n    const defaultExpandedKeys = store.defaultExpandedKeys\n    const key = store.key\n\n    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {\n      this.expand(null, store.autoExpandParent)\n    }\n\n    if (\n      key &&\n      store.currentNodeKey !== undefined &&\n      this.key === store.currentNodeKey\n    ) {\n      store.currentNode = this\n      store.currentNode.isCurrent = true\n    }\n\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this)\n    }\n\n    this.updateLeafState()\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true\n  }\n\n  setData(data: TreeNodeData): void {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data)\n    }\n\n    this.data = data\n    this.childNodes = []\n\n    let children\n    if (this.level === 0 && Array.isArray(this.data)) {\n      children = this.data\n    } else {\n      children = getPropertyFromData(this, 'children') || []\n    }\n\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] })\n    }\n  }\n\n  get label(): string {\n    return getPropertyFromData(this, 'label')\n  }\n\n  get key(): TreeKey {\n    const nodeKey = this.store.key\n    if (this.data) return this.data[nodeKey]\n    return null\n  }\n\n  get disabled(): boolean {\n    return getPropertyFromData(this, 'disabled')\n  }\n\n  get nextSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return parent.childNodes[index + 1]\n      }\n    }\n    return null\n  }\n\n  get previousSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null\n      }\n    }\n    return null\n  }\n\n  contains(target: Node, deep = true): boolean {\n    return (this.childNodes || []).some(\n      (child) => child === target || (deep && child.contains(target))\n    )\n  }\n\n  remove(): void {\n    const parent = this.parent\n    if (parent) {\n      parent.removeChild(this)\n    }\n  }\n\n  insertChild(child?: FakeNode | Node, index?: number, batch?: boolean): void {\n    if (!child) throw new Error('InsertChild error: child is required.')\n\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true)\n        if (!children.includes(child.data)) {\n          if (typeof index === 'undefined' || index < 0) {\n            children.push(child.data)\n          } else {\n            children.splice(index, 0, child.data)\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store,\n      })\n      child = reactive(new Node(child as TreeNodeOptions))\n      if (child instanceof Node) {\n        child.initialize()\n      }\n    }\n\n    ;(child as Node).level = this.level + 1\n\n    if (typeof index === 'undefined' || index < 0) {\n      this.childNodes.push(child as Node)\n    } else {\n      this.childNodes.splice(index, 0, child as Node)\n    }\n\n    this.updateLeafState()\n  }\n\n  insertBefore(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n    }\n    this.insertChild(child, index)\n  }\n\n  insertAfter(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n      if (index !== -1) index += 1\n    }\n    this.insertChild(child, index)\n  }\n\n  removeChild(child: Node): void {\n    const children = this.getChildren() || []\n    const dataIndex = children.indexOf(child.data)\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1)\n    }\n\n    const index = this.childNodes.indexOf(child)\n\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child)\n      child.parent = null\n      this.childNodes.splice(index, 1)\n    }\n\n    this.updateLeafState()\n  }\n\n  removeChildByData(data: TreeNodeData): void {\n    let targetNode: Node = null\n\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i]\n        break\n      }\n    }\n\n    if (targetNode) {\n      this.removeChild(targetNode)\n    }\n  }\n\n  expand(callback?: () => void, expandParent?: boolean): void {\n    const done = (): void => {\n      if (expandParent) {\n        let parent = this.parent\n        while (parent.level > 0) {\n          parent.expanded = true\n          parent = parent.parent\n        }\n      }\n      this.expanded = true\n      if (callback) callback()\n      this.childNodes.forEach((item) => {\n        item.canFocus = true\n      })\n    }\n\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true)\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this)\n          }\n          done()\n        }\n      })\n    } else {\n      done()\n    }\n  }\n\n  doCreateChildren(\n    array: TreeNodeData[],\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ): void {\n    array.forEach((item) => {\n      this.insertChild(\n        Object.assign({ data: item }, defaultProps),\n        undefined,\n        true\n      )\n    })\n  }\n\n  collapse(): void {\n    this.expanded = false\n    this.childNodes.forEach((item) => {\n      item.canFocus = false\n    })\n  }\n\n  shouldLoadData(): boolean {\n    return this.store.lazy === true && this.store.load && !this.loaded\n  }\n\n  updateLeafState(): void {\n    if (\n      this.store.lazy === true &&\n      this.loaded !== true &&\n      typeof this.isLeafByUser !== 'undefined'\n    ) {\n      this.isLeaf = this.isLeafByUser\n      return\n    }\n    const childNodes = this.childNodes\n    if (\n      !this.store.lazy ||\n      (this.store.lazy === true && this.loaded === true)\n    ) {\n      this.isLeaf = !childNodes || childNodes.length === 0\n      return\n    }\n    this.isLeaf = false\n  }\n\n  setChecked(\n    value?: boolean | string,\n    deep?: boolean,\n    recursion?: boolean,\n    passValue?: boolean\n  ) {\n    this.indeterminate = value === 'half'\n    this.checked = value === true\n\n    if (this.store.checkStrictly) return\n\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes)\n\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false\n        value = false\n      }\n\n      const handleDescendants = (): void => {\n        if (deep) {\n          const childNodes = this.childNodes\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i]\n            passValue = passValue || value !== false\n            const isCheck = child.disabled ? child.checked : passValue\n            child.setChecked(isCheck, deep, true, passValue)\n          }\n          const { half, all } = getChildState(childNodes)\n          if (!all) {\n            this.checked = all\n            this.indeterminate = half\n          }\n        }\n      }\n\n      if (this.shouldLoadData()) {\n        // Only work on lazy load data.\n        this.loadData(\n          () => {\n            handleDescendants()\n            reInitChecked(this)\n          },\n          {\n            checked: value !== false,\n          }\n        )\n        return\n      } else {\n        handleDescendants()\n      }\n    }\n\n    const parent = this.parent\n    if (!parent || parent.level === 0) return\n\n    if (!recursion) {\n      reInitChecked(parent)\n    }\n  }\n\n  getChildren(forceInit = false): TreeNodeData | TreeNodeData[] {\n    // this is data\n    if (this.level === 0) return this.data\n    const data = this.data\n    if (!data) return null\n\n    const props = this.store.props\n    let children = 'children'\n    if (props) {\n      children = props.children || 'children'\n    }\n\n    if (data[children] === undefined) {\n      data[children] = null\n    }\n\n    if (forceInit && !data[children]) {\n      data[children] = []\n    }\n\n    return data[children]\n  }\n\n  updateChildren(): void {\n    const newData = (this.getChildren() || []) as TreeNodeData[]\n    const oldData = this.childNodes.map((node) => node.data)\n\n    const newDataMap = {}\n    const newNodes = []\n\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY]\n      const isNodeExists =\n        !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item }\n      } else {\n        newNodes.push({ index, data: item })\n      }\n    })\n\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]]) this.removeChildByData(item)\n      })\n    }\n\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index)\n    })\n\n    this.updateLeafState()\n  }\n\n  loadData(\n    callback: (node: Node) => void,\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ) {\n    if (\n      this.store.lazy === true &&\n      this.store.load &&\n      !this.loaded &&\n      (!this.loading || Object.keys(defaultProps).length)\n    ) {\n      this.loading = true\n\n      const resolve = (children) => {\n        this.childNodes = []\n\n        this.doCreateChildren(children, defaultProps)\n        this.loaded = true\n        this.loading = false\n\n        this.updateLeafState()\n        if (callback) {\n          callback.call(this, children)\n        }\n      }\n\n      this.store.load(this, resolve)\n    } else {\n      if (callback) {\n        callback.call(this)\n      }\n    }\n  }\n}\n\nexport default Node\n","// @ts-nocheck\nimport { hasOwn, isObject } from '@element-plus/utils'\nimport Node from './node'\nimport { getNodeKey } from './util'\n\nimport type {\n  FilterNodeMethodFunction,\n  FilterValue,\n  LoadFunction,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n  TreeOptionProps,\n  TreeStoreNodesMap,\n  TreeStoreOptions,\n} from '../tree.type'\n\nexport default class TreeStore {\n  currentNode: Node\n  currentNodeKey: TreeKey\n  nodesMap: TreeStoreNodesMap\n  root: Node\n  data: TreeData\n  lazy: boolean\n  load: LoadFunction\n  filterNodeMethod: FilterNodeMethodFunction\n  key: TreeKey\n  defaultCheckedKeys: TreeKey[]\n  checkStrictly: boolean\n  defaultExpandedKeys: TreeKey[]\n  autoExpandParent: boolean\n  defaultExpandAll: boolean\n  checkDescendants: boolean\n  props: TreeOptionProps\n\n  constructor(options: TreeStoreOptions) {\n    this.currentNode = null\n    this.currentNodeKey = null\n\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option]\n      }\n    }\n\n    this.nodesMap = {}\n  }\n\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this,\n    })\n    this.root.initialize()\n\n    if (this.lazy && this.load) {\n      const loadFn = this.load\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data)\n        this._initDefaultCheckedNodes()\n      })\n    } else {\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  filter(value: FilterValue): void {\n    const filterNodeMethod = this.filterNodeMethod\n    const lazy = this.lazy\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child)\n\n        traverse(child)\n      })\n\n      if (!(node as Node).visible && childNodes.length) {\n        let allHidden = true\n        allHidden = !childNodes.some((child) => child.visible)\n\n        if ((node as TreeStore).root) {\n          ;(node as TreeStore).root.visible = allHidden === false\n        } else {\n          ;(node as Node).visible = allHidden === false\n        }\n      }\n      if (!value) return\n\n      if ((node as Node).visible && !(node as Node).isLeaf && !lazy)\n        (node as Node).expand()\n    }\n\n    traverse(this)\n  }\n\n  setData(newVal: TreeData): void {\n    const instanceChanged = newVal !== this.root.data\n    if (instanceChanged) {\n      this.root.setData(newVal)\n      this._initDefaultCheckedNodes()\n    } else {\n      this.root.updateChildren()\n    }\n  }\n\n  getNode(data: TreeKey | TreeNodeData): Node {\n    if (data instanceof Node) return data\n    const key = isObject(data) ? getNodeKey(this.key, data) : data\n    return this.nodesMap[key] || null\n  }\n\n  insertBefore(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertBefore({ data }, refNode)\n  }\n\n  insertAfter(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertAfter({ data }, refNode)\n  }\n\n  remove(data: TreeNodeData | Node): void {\n    const node = this.getNode(data)\n\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null\n      }\n      node.parent.removeChild(node)\n    }\n  }\n\n  append(data: TreeNodeData, parentData: TreeNodeData | TreeKey | Node): void {\n    const parentNode = parentData ? this.getNode(parentData) : this.root\n\n    if (parentNode) {\n      parentNode.insertChild({ data })\n    }\n  }\n\n  _initDefaultCheckedNodes(): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n    const nodesMap = this.nodesMap\n\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey]\n\n      if (node) {\n        node.setChecked(true, !this.checkStrictly)\n      }\n    })\n  }\n\n  _initDefaultCheckedNode(node: Node): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n\n    if (defaultCheckedKeys.includes(node.key)) {\n      node.setChecked(true, !this.checkStrictly)\n    }\n  }\n\n  setDefaultCheckedKey(newVal: TreeKey[]): void {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  registerNode(node: Node): void {\n    const key = this.key\n    if (!node || !node.data) return\n\n    if (!key) {\n      this.nodesMap[node.id] = node\n    } else {\n      const nodeKey = node.key\n      if (nodeKey !== undefined) this.nodesMap[node.key] = node\n    }\n  }\n\n  deregisterNode(node: Node): void {\n    const key = this.key\n    if (!key || !node || !node.data) return\n\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child)\n    })\n\n    delete this.nodesMap[node.key]\n  }\n\n  getCheckedNodes(\n    leafOnly = false,\n    includeHalfChecked = false\n  ): TreeNodeData[] {\n    const checkedNodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (\n          (child.checked || (includeHalfChecked && child.indeterminate)) &&\n          (!leafOnly || (leafOnly && child.isLeaf))\n        ) {\n          checkedNodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return checkedNodes\n  }\n\n  getCheckedKeys(leafOnly = false): TreeKey[] {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key])\n  }\n\n  getHalfCheckedNodes(): TreeNodeData[] {\n    const nodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return nodes\n  }\n\n  getHalfCheckedKeys(): TreeKey[] {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key])\n  }\n\n  _getAllNodes(): Node[] {\n    const allNodes: Node[] = []\n    const nodesMap = this.nodesMap\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey])\n      }\n    }\n\n    return allNodes\n  }\n\n  updateChildren(key: TreeKey, data: TreeData): void {\n    const node = this.nodesMap[key]\n    if (!node) return\n    const childNodes = node.childNodes\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i]\n      this.remove(child.data)\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i]\n      this.append(child, node.data)\n    }\n  }\n\n  _setCheckedKeys(\n    key: TreeKey,\n    leafOnly = false,\n    checkedKeys: { [key: string]: boolean }\n  ): void {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level)\n    const cache = Object.create(null)\n    const keys = Object.keys(checkedKeys)\n    allNodes.forEach((node) => node.setChecked(false, false))\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i]\n      const nodeKey = node.data[key].toString()\n      const checked = keys.includes(nodeKey)\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false)\n        }\n        continue\n      }\n\n      let parent = node.parent\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true\n        parent = parent.parent\n      }\n\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false)\n        continue\n      }\n      node.setChecked(true, true)\n\n      if (leafOnly) {\n        node.setChecked(false, false)\n        const traverse = function (node: Node): void {\n          const childNodes = node.childNodes\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false)\n            }\n            traverse(child)\n          })\n        }\n        traverse(node)\n      }\n    }\n  }\n\n  setCheckedNodes(array: Node[], leafOnly = false): void {\n    const key = this.key\n    const checkedKeys = {}\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setCheckedKeys(keys: TreeKey[], leafOnly = false): void {\n    this.defaultCheckedKeys = keys\n    const key = this.key\n    const checkedKeys = {}\n    keys.forEach((key) => {\n      checkedKeys[key] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setDefaultExpandedKeys(keys: TreeKey[]) {\n    keys = keys || []\n    this.defaultExpandedKeys = keys\n    keys.forEach((key) => {\n      const node = this.getNode(key)\n      if (node) node.expand(null, this.autoExpandParent)\n    })\n  }\n\n  setChecked(\n    data: TreeKey | TreeNodeData,\n    checked: boolean,\n    deep: boolean\n  ): void {\n    const node = this.getNode(data)\n\n    if (node) {\n      node.setChecked(!!checked, deep)\n    }\n  }\n\n  getCurrentNode(): Node {\n    return this.currentNode\n  }\n\n  setCurrentNode(currentNode: Node): void {\n    const prevCurrentNode = this.currentNode\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false\n    }\n    this.currentNode = currentNode\n    this.currentNode.isCurrent = true\n  }\n\n  setUserCurrentNode(node: Node, shouldAutoExpandParent = true): void {\n    const key = node[this.key]\n    const currNode = this.nodesMap[key]\n    this.setCurrentNode(currNode)\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true)\n    }\n  }\n\n  setCurrentNodeKey(key?: TreeKey, shouldAutoExpandParent = true): void {\n    if (key === null || key === undefined) {\n      this.currentNode && (this.currentNode.isCurrent = false)\n      this.currentNode = null\n      return\n    }\n    const node = this.getNode(key)\n    if (node) {\n      this.setCurrentNode(node)\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true)\n      }\n    }\n  }\n}\n","<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : h('span', { class: ns.be('node', 'label') }, [\n            tree.ctx.slots.default\n              ? tree.ctx.slots.default({ node, data })\n              : node.label,\n          ])\n    }\n  },\n})\n</script>\n","// @ts-nocheck\nimport { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n","// @ts-nocheck\nimport { provide, ref } from 'vue'\nimport { addClass, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { InjectionKey } from 'vue'\nimport type Node from './node'\nimport type { NodeDropType } from '../tree.type'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace('tree')\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (\n      typeof props.allowDrag === 'function' &&\n      !props.allowDrag(treeNode.node)\n    ) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (typeof props.allowDrop === 'function') {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n\n    const targetPosition = dropNode.$el.getBoundingClientRect()\n    const treePosition = el$.value.getBoundingClientRect()\n\n    let dropType: NodeDropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator.style.top = `${indicatorTop}px`\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropNode.$el, ns.is('drop-inner'))\n    } else {\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy)\n      }\n\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n","<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      handleCurrentChange(tree.store, tree.ctx.emit, () =>\n        tree.store.value.setCurrentNode(props.node)\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n","// @ts-nocheck\nimport { onMounted, onUpdated, shallowRef, watch } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type TreeStore from './tree-store'\n\nimport type { Ref } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\ninterface UseKeydownOption {\n  el$: Ref<HTMLElement>\n}\nexport function useKeydown({ el$ }: UseKeydownOption, store: Ref<TreeStore>) {\n  const ns = useNamespace('tree')\n\n  const treeItems = shallowRef<Nullable<HTMLElement>[]>([])\n  const checkboxItems = shallowRef<Nullable<HTMLElement>[]>([])\n\n  onMounted(() => {\n    initTabIndex()\n  })\n\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll('[role=treeitem]'))\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n  })\n\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute('tabindex', '-1')\n    })\n  })\n\n  const handleKeydown = (ev: KeyboardEvent): void => {\n    const currentItem = ev.target as HTMLElement\n    if (!currentItem.className.includes(ns.b('node'))) return\n    const code = ev.code\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    const currentIndex = treeItems.value.indexOf(currentItem)\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      ev.preventDefault()\n      if (code === EVENT_CODE.up) {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex !== 0\n            ? currentIndex - 1\n            : treeItems.value.length - 1\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex--\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1\n          }\n        }\n      } else {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex < treeItems.value.length - 1\n            ? currentIndex + 1\n            : 0\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex++\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus()\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {\n      ev.preventDefault()\n      currentItem.click()\n    }\n    const hasInput = currentItem.querySelector(\n      '[type=\"checkbox\"]'\n    ) as Nullable<HTMLInputElement>\n    if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && hasInput) {\n      ev.preventDefault()\n      hasInput.click()\n    }\n  }\n\n  useEventListener(el$, 'keydown', handleKeydown)\n\n  const initTabIndex = (): void => {\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n    const checkedItem = el$.value.querySelectorAll(\n      `.${ns.is('checked')}[role=treeitem]`\n    )\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute('tabindex', '0')\n      return\n    }\n    treeItems.value[0]?.setAttribute('tabindex', '0')\n  }\n}\n","<template>\n  <div\n    ref=\"el$\"\n    :class=\"[\n      ns.b(),\n      ns.is('dragging', !!dragState.draggingNode),\n      ns.is('drop-not-allow', !dragState.allowDrop),\n      ns.is('drop-inner', dragState.dropType === 'inner'),\n      { [ns.m('highlight-current')]: highlightCurrent },\n    ]\"\n    role=\"tree\"\n  >\n    <el-tree-node\n      v-for=\"child in root.childNodes\"\n      :key=\"getNodeKey(child)\"\n      :node=\"child\"\n      :props=\"props\"\n      :accordion=\"accordion\"\n      :render-after-expand=\"renderAfterExpand\"\n      :show-checkbox=\"showCheckbox\"\n      :render-content=\"renderContent\"\n      @node-expand=\"handleNodeExpand\"\n    />\n    <div v-if=\"isEmpty\" :class=\"ns.e('empty-block')\">\n      <span :class=\"ns.e('empty-text')\">{{\n        emptyText ?? t('el.tree.emptyText')\n      }}</span>\n    </div>\n    <div\n      v-show=\"dragState.showDropIndicator\"\n      ref=\"dropIndicator$\"\n      :class=\"ns.e('drop-indicator')\"\n    />\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { iconPropType } from '@element-plus/utils'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { formItemContextKey } from '@element-plus/tokens'\nimport TreeStore from './model/tree-store'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport ElTreeNode from './tree-node.vue'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { useDragNodeHandler } from './model/useDragNode'\nimport { useKeydown } from './model/useKeydown'\nimport type Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  TreeComponentProps,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n} from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTree',\n  components: { ElTreeNode },\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    emptyText: {\n      type: String,\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true,\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true,\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false,\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true,\n    },\n    defaultCheckedKeys: Array as PropType<\n      TreeComponentProps['defaultCheckedKeys']\n    >,\n    defaultExpandedKeys: Array as PropType<\n      TreeComponentProps['defaultExpandedKeys']\n    >,\n    currentNodeKey: [String, Number] as PropType<string | number>,\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n    draggable: {\n      type: Boolean,\n      default: false,\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object as PropType<TreeComponentProps['props']>,\n      default: () => ({\n        children: 'children',\n        label: 'label',\n        disabled: 'disabled',\n      }),\n    },\n    lazy: {\n      type: Boolean,\n      default: false,\n    },\n    highlightCurrent: Boolean,\n    load: Function as PropType<TreeComponentProps['load']>,\n    filterNodeMethod: Function as PropType<\n      TreeComponentProps['filterNodeMethod']\n    >,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18,\n    },\n    icon: {\n      type: iconPropType,\n    },\n  },\n  emits: [\n    'check-change',\n    'current-change',\n    'node-click',\n    'node-contextmenu',\n    'node-collapse',\n    'node-expand',\n    'check',\n    'node-drag-start',\n    'node-drag-end',\n    'node-drop',\n    'node-drag-leave',\n    'node-drag-enter',\n    'node-drag-over',\n  ],\n  setup(props, ctx) {\n    const { t } = useLocale()\n    const ns = useNamespace('tree')\n\n    const store = ref<TreeStore>(\n      new TreeStore({\n        key: props.nodeKey,\n        data: props.data,\n        lazy: props.lazy,\n        props: props.props,\n        load: props.load,\n        currentNodeKey: props.currentNodeKey,\n        checkStrictly: props.checkStrictly,\n        checkDescendants: props.checkDescendants,\n        defaultCheckedKeys: props.defaultCheckedKeys,\n        defaultExpandedKeys: props.defaultExpandedKeys,\n        autoExpandParent: props.autoExpandParent,\n        defaultExpandAll: props.defaultExpandAll,\n        filterNodeMethod: props.filterNodeMethod,\n      })\n    )\n\n    store.value.initialize()\n\n    const root = ref<Node>(store.value.root)\n    const currentNode = ref<Node>(null)\n    const el$ = ref<Nullable<HTMLElement>>(null)\n    const dropIndicator$ = ref<Nullable<HTMLElement>>(null)\n\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store,\n    })\n\n    useKeydown({ el$ }, store)\n\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value\n      return (\n        !childNodes ||\n        childNodes.length === 0 ||\n        childNodes.every(({ visible }) => !visible)\n      )\n    })\n\n    watch(\n      () => props.currentNodeKey,\n      (newVal) => {\n        store.value.setCurrentNodeKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultCheckedKeys,\n      (newVal) => {\n        store.value.setDefaultCheckedKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultExpandedKeys,\n      (newVal) => {\n        store.value.setDefaultExpandedKeys(newVal)\n      }\n    )\n\n    watch(\n      () => props.data,\n      (newVal) => {\n        store.value.setData(newVal)\n      },\n      { deep: true }\n    )\n\n    watch(\n      () => props.checkStrictly,\n      (newVal) => {\n        store.value.checkStrictly = newVal\n      }\n    )\n\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error('[Tree] filterNodeMethod is required when filter')\n      store.value.filter(value)\n    }\n\n    const getNodeKey = (node: Node) => {\n      return getNodeKeyUtil(props.nodeKey, node.data)\n    }\n\n    const getNodePath = (data: TreeKey | TreeNodeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getNodePath')\n      const node = store.value.getNode(data)\n      if (!node) return []\n      const path = [node.data]\n      let parent = node.parent\n      while (parent && parent !== root.value) {\n        path.push(parent.data)\n        parent = parent.parent\n      }\n      return path.reverse()\n    }\n\n    const getCheckedNodes = (\n      leafOnly?: boolean,\n      includeHalfChecked?: boolean\n    ): TreeNodeData[] => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked)\n    }\n\n    const getCheckedKeys = (leafOnly?: boolean): TreeKey[] => {\n      return store.value.getCheckedKeys(leafOnly)\n    }\n\n    const getCurrentNode = (): TreeNodeData => {\n      const currentNode = store.value.getCurrentNode()\n      return currentNode ? currentNode.data : null\n    }\n\n    const getCurrentKey = (): any => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getCurrentKey')\n      const currentNode = getCurrentNode()\n      return currentNode ? currentNode[props.nodeKey] : null\n    }\n\n    const setCheckedNodes = (nodes: Node[], leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedNodes')\n      store.value.setCheckedNodes(nodes, leafOnly)\n    }\n\n    const setCheckedKeys = (keys, leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedKeys')\n      store.value.setCheckedKeys(keys, leafOnly)\n    }\n\n    const setChecked = (\n      data: TreeKey | TreeNodeData,\n      checked: boolean,\n      deep: boolean\n    ) => {\n      store.value.setChecked(data, checked, deep)\n    }\n\n    const getHalfCheckedNodes = (): TreeNodeData[] => {\n      return store.value.getHalfCheckedNodes()\n    }\n\n    const getHalfCheckedKeys = (): TreeKey[] => {\n      return store.value.getHalfCheckedKeys()\n    }\n\n    const setCurrentNode = (node: Node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentNode')\n\n      handleCurrentChange(store, ctx.emit, () =>\n        store.value.setUserCurrentNode(node, shouldAutoExpandParent)\n      )\n    }\n\n    const setCurrentKey = (key?: TreeKey, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentKey')\n\n      handleCurrentChange(store, ctx.emit, () =>\n        store.value.setCurrentNodeKey(key, shouldAutoExpandParent)\n      )\n    }\n\n    const getNode = (data: TreeKey | TreeNodeData): Node => {\n      return store.value.getNode(data)\n    }\n\n    const remove = (data: TreeNodeData | Node) => {\n      store.value.remove(data)\n    }\n\n    const append = (\n      data: TreeNodeData,\n      parentNode: TreeNodeData | TreeKey | Node\n    ) => {\n      store.value.append(data, parentNode)\n    }\n\n    const insertBefore = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertBefore(data, refNode)\n    }\n\n    const insertAfter = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertAfter(data, refNode)\n    }\n\n    const handleNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const updateKeyChildren = (key: TreeKey, data: TreeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in updateKeyChild')\n      store.value.updateChildren(key, data)\n    }\n\n    provide('RootTree', {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance(),\n    } as any)\n\n    provide(formItemContextKey, undefined)\n\n    return {\n      ns,\n      // ref\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n\n      // computed\n      isEmpty,\n\n      // methods\n      filter,\n      getNodeKey,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren,\n    }\n  },\n})\n</script>\n","import Tree from './src/tree.vue'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nTree.install = (app: App): void => {\n  app.component(Tree.name, Tree)\n}\n\nconst _Tree = Tree as SFCWithInstall<typeof Tree>\n\nexport default _Tree\nexport const ElTree = _Tree\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1b59c732\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"role\"\n};\nconst _hoisted_2 = {\n  class: \"menu-tree\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_page_search = _resolveComponent(\"page-search\");\n\n  const _component_page_content = _resolveComponent(\"page-content\");\n\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  const _component_page_modal = _resolveComponent(\"page-modal\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_page_search, {\n    searchFormConfig: _ctx.searchFormConfig,\n    onResetBtnClick: _ctx.handleResetClick,\n    onQueryBtnClick: _ctx.handleQueryClick\n  }, null, 8, [\"searchFormConfig\", \"onResetBtnClick\", \"onQueryBtnClick\"]), _createVNode(_component_page_content, {\n    pageName: \"role\",\n    contentTableConfig: _ctx.contentTableConfig,\n    ref: \"pageContentRef\",\n    onNewBtnClick: _ctx.handleNewData,\n    onUpdateBtnClick: _ctx.handleUpdateData\n  }, null, 8, [\"contentTableConfig\", \"onNewBtnClick\", \"onUpdateBtnClick\"]), _createVNode(_component_page_modal, {\n    pageName: \"role\",\n    modalConfig: _ctx.modalConfig,\n    ref: \"pageModalRef\",\n    modalFormConfig: _ctx.modalFormConfig,\n    otherInfo: _ctx.otherInfo\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_tree, {\n      ref: \"elTreeRef\",\n      data: _ctx.menus,\n      \"show-checkbox\": \"\",\n      \"node-key\": \"id\",\n      props: {\n        children: 'children',\n        label: 'name'\n      },\n      onCheck: _ctx.handleCheckChange\n    }, null, 8, [\"data\", \"onCheck\"])])]),\n    _: 1\n  }, 8, [\"modalConfig\", \"modalFormConfig\", \"otherInfo\"])]);\n}","import { IForm } from '@/base-ui/form'\n\nexport const searchFormConfig: IForm = {\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '角色名称',\n      rules: [],\n      placeholder: '请输入角色名称'\n    },\n    {\n      field: 'intro',\n      type: 'input',\n      label: '角色描述',\n      rules: [],\n      placeholder: '请输入角色描述'\n    },\n    {\n      field: 'createAt',\n      type: 'datepicker',\n      label: '创建时间',\n      rules: [],\n      otherOptions: {\n        startPlaceholder: '开始时间',\n        endPlaceholder: '结束时间',\n        type: 'daterange'\n      }\n    }\n  ],\n  labelWidth: '120px',\n  itemStyle: {\n    padding: '10px 20px'\n  }\n}\n","import { ITable } from '@/base-ui/table'\n\nexport const contentTableConfig: ITable = {\n  title: '角色列表',\n  newBtnTitle: '新建角色',\n  propList: [\n    { prop: 'name', label: '角色名', minWidth: '100' },\n    { prop: 'intro', label: '权限介绍', minWidth: '100' },\n    {\n      prop: 'createAt',\n      label: '创建时间',\n      minWidth: '180',\n      slotName: 'createAt'\n    },\n    {\n      prop: 'updateAt',\n      label: '更新时间',\n      minWidth: '180',\n      slotName: 'updateAt'\n    },\n    {\n      label: '操作',\n      minWidth: '140',\n      slotName: 'handler'\n    }\n  ],\n  showIndexColumn: true,\n  showSelectColumn: true\n}\n","import { IForm } from '@/base-ui/form'\n\nexport const modalConfig: IForm = {\n  title: '新建角色',\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '角色名称',\n      placeholder: '请输入角色名称'\n    },\n    {\n      field: 'intro',\n      type: 'input',\n      label: '角色描述',\n      placeholder: '请输入角色描述'\n    }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: { padding: 0 }\n}\n","import { defineComponent, computed, ref, nextTick } from 'vue';\nimport { useStore } from '@/store';\nimport { mapMenusToMenuTree } from '@/utils/map-menus';\nimport PageSearch from '@/components/page-search';\nimport PageContent from '@/components/page-content';\nimport PageModal from '@/components/page-modal';\nimport { searchFormConfig } from '../role/config/search.config';\nimport { contentTableConfig } from '../role/config/content.config';\nimport { modalConfig } from '../role/config/modal.config';\nimport { usePageSearch } from '@/hooks/usePageSearch';\nimport { usePageModal } from '@/hooks/usePageModal';\nexport default defineComponent({\n  name: 'role',\n  components: {\n    PageSearch,\n    PageContent,\n    PageModal\n  },\n\n  setup() {\n    // pageSearch相关的hook逻辑\n    const [pageContentRef, handleResetClick, handleQueryClick] = usePageSearch(); // pageModal相关的hook逻辑\n    // 从pageModal中获取到menuList数据\n\n    const elTreeRef = ref();\n\n    const emnuCallback = row => {\n      const menuTree = mapMenusToMenuTree(row.menuList); // 等待el-tree渲染完成后，再去设置默认选中的节点\n\n      nextTick(() => {\n        elTreeRef.value?.setCheckedKeys(menuTree, false);\n      });\n    };\n\n    const [pageModalRef, modalFormConfig, handleNewData, handleUpdateData] = usePageModal(undefined, emnuCallback);\n    const store = useStore();\n    const menus = computed(() => store.state.entireMenu);\n    const otherInfo = ref({});\n\n    const handleCheckChange = (data, node) => {\n      const checkedKeys = node.checkedKeys;\n      const halfCheckedKeys = node.halfCheckedKeys;\n      const menuList = [...checkedKeys, ...halfCheckedKeys];\n      otherInfo.value = {\n        menuList\n      };\n    };\n\n    return {\n      searchFormConfig,\n      contentTableConfig,\n      modalConfig,\n      pageContentRef,\n      handleResetClick,\n      handleQueryClick,\n      pageModalRef,\n      modalFormConfig,\n      handleNewData,\n      handleUpdateData,\n      menus,\n      otherInfo,\n      handleCheckChange,\n      elTreeRef\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import { render } from \"./role.vue?vue&type=template&id=1b59c732&scoped=true&ts=true\"\nimport script from \"./role.vue?vue&type=script&lang=ts\"\nexport * from \"./role.vue?vue&type=script&lang=ts\"\n\nimport \"./role.vue?vue&type=style&index=0&id=1b59c732&scoped=true&lang=less\"\n\nimport exportComponent from \"D:\\\\vue\\\\vue3why\\\\vue3-ts-cmss\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b59c732\"]])\n\nexport default __exports__","<template>\n  <transition :name=\"ns.b()\" v-on=\"on\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\" setup>\nimport { useNamespace } from '@element-plus/hooks'\nimport type { RendererElement } from '@vue/runtime-core'\n\ndefineOptions({\n  name: 'ElCollapseTransition',\n})\n\nconst ns = useNamespace('collapse-transition')\n\nconst on = {\n  beforeEnter(el: RendererElement) {\n    if (!el.dataset) el.dataset = {}\n\n    el.dataset.oldPaddingTop = el.style.paddingTop\n    el.dataset.oldPaddingBottom = el.style.paddingBottom\n\n    el.style.maxHeight = 0\n    el.style.paddingTop = 0\n    el.style.paddingBottom = 0\n  },\n\n  enter(el: RendererElement) {\n    el.dataset.oldOverflow = el.style.overflow\n    if (el.scrollHeight !== 0) {\n      el.style.maxHeight = `${el.scrollHeight}px`\n      el.style.paddingTop = el.dataset.oldPaddingTop\n      el.style.paddingBottom = el.dataset.oldPaddingBottom\n    } else {\n      el.style.maxHeight = 0\n      el.style.paddingTop = el.dataset.oldPaddingTop\n      el.style.paddingBottom = el.dataset.oldPaddingBottom\n    }\n\n    el.style.overflow = 'hidden'\n  },\n\n  afterEnter(el: RendererElement) {\n    el.style.maxHeight = ''\n    el.style.overflow = el.dataset.oldOverflow\n  },\n\n  beforeLeave(el: RendererElement) {\n    if (!el.dataset) el.dataset = {}\n    el.dataset.oldPaddingTop = el.style.paddingTop\n    el.dataset.oldPaddingBottom = el.style.paddingBottom\n    el.dataset.oldOverflow = el.style.overflow\n\n    el.style.maxHeight = `${el.scrollHeight}px`\n    el.style.overflow = 'hidden'\n  },\n\n  leave(el: RendererElement) {\n    if (el.scrollHeight !== 0) {\n      el.style.maxHeight = 0\n      el.style.paddingTop = 0\n      el.style.paddingBottom = 0\n    }\n  },\n\n  afterLeave(el: RendererElement) {\n    el.style.maxHeight = ''\n    el.style.overflow = el.dataset.oldOverflow\n    el.style.paddingTop = el.dataset.oldPaddingTop\n    el.style.paddingBottom = el.dataset.oldPaddingBottom\n  },\n}\n</script>\n","import CollapseTransition from './src/collapse-transition.vue'\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nCollapseTransition.install = (app: App): void => {\n  app.component(CollapseTransition.name, CollapseTransition)\n}\n\nconst _CollapseTransition = CollapseTransition as SFCWithInstall<\n  typeof CollapseTransition\n>\n\nexport default _CollapseTransition\nexport const ElCollapseTransition = _CollapseTransition\n"],"names":["PageSearch","usePageSearch","pageContentRef","ref","handleResetClick","value","getPageData","handleQueryClick","queryInfo","console","log","_withScopeId","n","_hoisted_1","class","_hoisted_2","_","_hoisted_3","_hoisted_4","_hoisted_5","render","_ctx","_cache","$props","$setup","$data","$options","_component_Refresh","_component_el_icon","_component_el_button","_component_Search","_component_lb_form","searchFormConfig","modelValue","formData","$event","updateFormData","header","footer","onClick","default","type","props","Object","required","components","LbForm","eimts","setup","emit","formItems","formOriginData","item","field","formRef","key","resetFormData","newValue","JSON","stringify","__exports__","NODE_KEY","markNodeData","node","data","defineProperty","id","enumerable","configurable","writable","getNodeKey","handleCurrentChange","store","setCurrent","preCurrentNode","currentNode","getChildState","all","none","allWithoutDisable","i","j","length","checked","indeterminate","disabled","half","reInitChecked","childNodes","loading","parent","level","checkStrictly","getPropertyFromData","prop","config","dataProp","nodeIdSeed","Node","constructor","options","text","expanded","visible","isCurrent","canFocus","name","hasOwn","loaded","initialize","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","includes","autoExpandParent","currentNodeKey","_initDefaultCheckedNode","updateLeafState","children","insertChild","label","nodeKey","this","nextSibling","index","indexOf","previousSibling","contains","target","deep","some","child","remove","removeChild","batch","getChildren","push","splice","assign","reactive","insertBefore","insertAfter","dataIndex","deregisterNode","removeChildByData","targetNode","callback","expandParent","done","forEach","shouldLoadData","loadData","setChecked","doCreateChildren","array","defaultProps","collapse","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","updateChildren","newData","oldData","map","newDataMap","newNodes","isNodeExists","findIndex","keys","call","resolve","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filter","filterNodeMethod","traverse","allHidden","newVal","instanceChanged","getNode","isObject","refData","refNode","append","parentData","parentNode","defaultCheckedKeys","checkedKey","setDefaultCheckedKey","getCheckedNodes","leafOnly","includeHalfChecked","checkedNodes","getCheckedKeys","getHalfCheckedNodes","nodes","getHalfCheckedKeys","_getAllNodes","allNodes","_setCheckedKeys","checkedKeys","sort","a","b","cache","create","toString","node2","setCheckedNodes","setCheckedKeys","key2","setDefaultExpandedKeys","getCurrentNode","setCurrentNode","prevCurrentNode","setUserCurrentNode","shouldAutoExpandParent","currNode","setCurrentNodeKey","_sfc_main","defineComponent","renderContent","Function","ns","useNamespace","nodeInstance","inject","tree","h","_self","be","ctx","slots","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","provide","broadcastExpanded","accordion","childNode","dragEventsKey","Symbol","useDragNodeHandler","el$","dropIndicator$","dragState","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","treeNodeDragStart","event","treeNode","allowDrag","preventDefault","dataTransfer","effectAllowed","e","treeNodeDragOver","oldDropNode","removeClass","$el","is","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","style","left","right","addClass","treeNodeDragEnd","draggingNodeCopy","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","instance","getCurrentInstance","debugWarn","childrenKey","watch","val","handleSelectChange","nextTick","getNodeKeyUtil","getNodeClass","nodeClassFunc","className","handleClick","expandOnClickNode","handleExpandIconClick","checkOnClickNode","handleCheckChange","handleContextMenu","vnode","stopPropagation","ev","halfCheckedNodes","halfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","CaretRight","_createElementBlock","role","tabindex","onContextmenu","onDragstart","onDragover","onDragend","onDrop","_createElementVNode","_normalizeClass","_normalizeStyle","paddingLeft","indent","icon","_openBlock","_createBlock","_withModifiers","onChange","_createCommentVNode","openBlock","_createVNode","withDirectives","_Fragment","_renderList","onNodeExpand","useKeydown","treeItems","shallowRef","checkboxItems","onMounted","initTabIndex","onUpdated","from","querySelectorAll","checkbox","setAttribute","handleKeydown","currentItem","code","currentIndex","nextIndex","EVENT_CODE","startIndex","dataset","focus","click","hasInput","useEventListener","_a","checkedItem","ElTreeNode","emptyText","String","Number","highlightCurrent","t","useLocale","isEmpty","computed","every","getNodePath","path","reverse","currentNode2","getCurrentKey","setCurrentKey","handleNodeExpand","updateKeyChildren","formItemContextKey","_toDisplayString","_withDirectives","Tree","app","component","_Tree","ElTree","_component_page_search","_component_page_content","_component_el_tree","_component_page_modal","onResetBtnClick","onQueryBtnClick","pageName","contentTableConfig","onNewBtnClick","handleNewData","onUpdateBtnClick","handleUpdateData","modalConfig","modalFormConfig","otherInfo","menus","onCheck","rules","placeholder","otherOptions","startPlaceholder","endPlaceholder","labelWidth","itemStyle","padding","title","newBtnTitle","propList","minWidth","slotName","showIndexColumn","showSelectColumn","colLayout","span","PageContent","PageModal","elTreeRef","emnuCallback","row","menuTree","menuList","pageModalRef","usePageModal","undefined","state","entireMenu","on","beforeEnter","el","enter","afterEnter","beforeLeave","leave","afterLeave","CollapseTransition","_CollapseTransition"],"sourceRoot":""}